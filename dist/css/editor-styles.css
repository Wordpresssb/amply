@charset "UTF-8";

/** === Editor Frame === */

@media only screen and (min-width: 768px) {
  body .editor-writing-flow {
    max-width: 80%;
    margin: 0 calc((100% - 80%) / 2);
  }

  body .editor-post-title__block,
  body .editor-default-block-appender,
  body .editor-block-list__block {
    margin-left: 0;
    margin-right: 0;
  }
}

/** === Content Width === */

.wp-block {
  max-width: 100%;
}

.wp-block .wp-block {
  width: 100%;
}

/** === Base Typography === */

body {
  font-size: 22px;
  font-family: "Crimson Text", serif;
  line-height: 1.8;
  color: #111;
}

p {
  font-size: 22px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Roboto Condensed", sans-serif;
  font-weight: 700;
}

h1 {
  font-size: 2.25em;
}

@media only screen and (min-width: 768px) {
  h1 {
    font-size: 2.8125em;
  }
}

h2 {
  font-size: 1.6875em;
}

@media only screen and (min-width: 768px) {
  h2 {
    font-size: 2.25em;
  }
}

h3 {
  font-size: 1.6875em;
}

h4 {
  font-size: 1.125em;
}

h5 {
  font-size: 0.88888889em;
}

h6 {
  font-size: 0.71111111em;
}

a {
  -webkit-transition: color 110ms ease-in-out;
  transition: color 110ms ease-in-out;
  color: #5C6BC0;
  text-decoration: none;
}

a:visited {
  color: #5C6BC0;
}

a:hover,
a:active {
  color: #4150a8;
  outline: 0;
  text-decoration: none;
}

a:focus {
  outline: thin dotted;
  text-decoration: underline;
}

/** === Post Title === */

.editor-post-title__block .editor-post-title__input {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 2.8125em;
  font-weight: 700;
}

/** === Default Appender === */

.editor-default-block-appender .editor-default-block-appender__content {
  font-family: "Crimson Text", serif;
  font-size: 22px;
}

/** === Alignments === */

@media only screen and (min-width: 768px) {
  .wp-block[data-align="right"] {
    max-width: 125%;
  }
}

@media only screen and (min-width: 768px) {
  .wp-block[data-align="wide"] {
    max-width: 100%;
  }
}

.wp-block[data-align="full"] {
  width: 100%;
}

@media only screen and (min-width: 600px) {
  .wp-block[data-align="full"] {
    width: calc( 100% + 90px);
    max-width: calc( 100% + 90px);
  }
}

@media only screen and (min-width: 768px) {
  .wp-block[data-align="full"] {
    position: relative;
    left: calc( -12.5% - 14px);
    width: calc( 125% + 116px);
    max-width: calc( 125% + 115px);
  }
}

/** === Colors === */

.has-primary-background-color,
.has-secondary-background-color,
.has-dark-gray-background-color,
.has-light-gray-background-color {
  color: #fff;
}

.has-primary-background-color p,
.has-primary-background-color h1,
.has-primary-background-color h2,
.has-primary-background-color h3,
.has-primary-background-color h4,
.has-primary-background-color h5,
.has-primary-background-color h6,
.has-primary-background-color a,
.has-secondary-background-color p,
.has-secondary-background-color h1,
.has-secondary-background-color h2,
.has-secondary-background-color h3,
.has-secondary-background-color h4,
.has-secondary-background-color h5,
.has-secondary-background-color h6,
.has-secondary-background-color a,
.has-dark-gray-background-color p,
.has-dark-gray-background-color h1,
.has-dark-gray-background-color h2,
.has-dark-gray-background-color h3,
.has-dark-gray-background-color h4,
.has-dark-gray-background-color h5,
.has-dark-gray-background-color h6,
.has-dark-gray-background-color a,
.has-light-gray-background-color p,
.has-light-gray-background-color h1,
.has-light-gray-background-color h2,
.has-light-gray-background-color h3,
.has-light-gray-background-color h4,
.has-light-gray-background-color h5,
.has-light-gray-background-color h6,
.has-light-gray-background-color a {
  color: #fff;
}

.has-white-background-color {
  color: #111;
}

.has-white-background-color p,
.has-white-background-color h1,
.has-white-background-color h2,
.has-white-background-color h3,
.has-white-background-color h4,
.has-white-background-color h5,
.has-white-background-color h6,
.has-white-background-color a {
  color: #111;
}

figcaption,
.gallery-caption {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 0.71111111em;
  line-height: 1.6;
  color: #767676;
}

/** === Paragraph drop-cap === */

.wp-block-paragraph.has-drop-cap:not(:focus)::first-letter {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 3.375em;
  line-height: 1;
  font-weight: bold;
  margin: 0 0.25em 0 0;
}

/** === Button === */

.wp-block-button .wp-block-button__link {
  line-height: 1.8;
  font-family: "Roboto Condensed", sans-serif;
  font-size: 0.88888889em;
  font-weight: bold;
}

.wp-block-button:not(.is-style-outline) .wp-block-button__link {
  background: #5C6BC0;
}

.wp-block-button:not(.is-style-squared) .wp-block-button__link {
  border-radius: 5px;
}

.wp-block-button.is-style-outline,
.wp-block-button.is-style-outline:hover,
.wp-block-button.is-style-outline:focus,
.wp-block-button.is-style-outline:active {
  background: transparent;
  color: #5C6BC0;
}

.wp-block-button.is-style-outline .wp-block-button__link,
.wp-block-button.is-style-outline:hover .wp-block-button__link,
.wp-block-button.is-style-outline:focus .wp-block-button__link,
.wp-block-button.is-style-outline:active .wp-block-button__link {
  background: transparent;
}

.wp-block-button.is-style-outline .wp-block-button__link:not(.has-text-color),
.wp-block-button.is-style-outline:hover .wp-block-button__link:not(.has-text-color),
.wp-block-button.is-style-outline:focus .wp-block-button__link:not(.has-text-color),
.wp-block-button.is-style-outline:active .wp-block-button__link:not(.has-text-color) {
  color: #5C6BC0;
}

/** === Latest Posts, Archives, Categories === */

ul.wp-block-archives,
.wp-block-categories,
.wp-block-latest-posts {
  padding: 0;
  list-style-type: none;
}

ul.wp-block-archives ul,
.wp-block-categories ul,
.wp-block-latest-posts ul {
  padding: 0;
  list-style-type: none;
}

ul.wp-block-archives li,
.wp-block-categories li,
.wp-block-latest-posts li {
  color: #767676;
  font-family: "Roboto Condensed", sans-serif;
  font-size: calc(22px * 1.125);
  font-weight: bold;
  line-height: 1.2;
  padding-bottom: 0.75rem;
}

ul.wp-block-archives li.menu-item-has-children,
ul.wp-block-archives li:last-child,
.wp-block-categories li.menu-item-has-children,
.wp-block-categories li:last-child,
.wp-block-latest-posts li.menu-item-has-children,
.wp-block-latest-posts li:last-child {
  padding-bottom: 0;
}

ul.wp-block-archives li a,
.wp-block-categories li a,
.wp-block-latest-posts li a {
  text-decoration: none;
}

ul.wp-block-archives li ul,
.wp-block-categories li ul,
.wp-block-latest-posts li ul {
  padding-left: 1rem;
}

.wp-block-categories ul {
  padding-top: 0.75rem;
}

.wp-block-categories ul ul {
  counter-reset: submenu;
}

.wp-block-categories ul ul > li > a::before {
  font-family: "Crimson Text", serif;
  font-weight: normal;
  content: "\2013\A0" counters(submenu, "\2013\A0", none);
  counter-increment: submenu;
}

.wp-block-categories li ul {
  list-style: none;
  padding-left: 0;
  margin-bottom: -0.75rem;
}

/** === Latest Posts grid view === */

.wp-block-latest-posts.is-grid li {
  border-top: 2px solid #ccc;
  padding-top: 1rem;
  margin-bottom: 2rem;
}

.wp-block-latest-posts.is-grid li a:after {
  content: '';
}

.wp-block-latest-posts.is-grid li:last-child {
  margin-bottom: auto;
}

.wp-block-latest-posts.is-grid li:last-child a:after {
  content: '';
}

/** === Verse === */

.wp-block-verse,
.wp-block-verse pre {
  padding: 0;
}

/** === Pullquote === */

.wp-block-pullquote {
  border-color: transparent;
  border-width: 2px;
  color: #000;
}

.wp-block-pullquote blockquote {
  margin-top: calc(3 * 1rem);
  margin-bottom: calc(3.33 * 1rem);
  -webkit-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto;
  word-break: break-word;
}

.wp-block-pullquote:not(.is-style-solid-color) .wp-block-pullquote__citation {
  color: #767676;
}

.wp-block-pullquote.is-style-solid-color blockquote {
  width: calc(100% - (2 * 1rem));
  max-width: calc( 100% - (2 * 1rem));
}

.wp-block-pullquote.is-style-solid-color blockquote a,
.wp-block-pullquote.is-style-solid-color blockquote.has-text-color p,
.wp-block-pullquote.is-style-solid-color blockquote.has-text-color a {
  color: inherit;
}

.wp-block-pullquote.is-style-solid-color blockquote:not(.has-text-color) {
  color: #fff;
}

@media only screen and (min-width: 768px) {
  .wp-block-pullquote.is-style-solid-color blockquote {
    max-width: 80%;
  }
}

.wp-block-pullquote.is-style-solid-color:not(.has-background-color) {
  background-color: #5C6BC0;
}

.wp-block[data-type="core/pullquote"] blockquote > .block-library-pullquote__content .editor-rich-text__tinymce[data-is-empty="true"]::before,
.wp-block[data-type="core/pullquote"] blockquote > .editor-rich-text p,
.wp-block[data-type="core/pullquote"] p,
.wp-block[data-type="core/pullquote"][data-align="left"] blockquote > .block-library-pullquote__content .editor-rich-text__tinymce[data-is-empty="true"]::before,
.wp-block[data-type="core/pullquote"][data-align="left"] blockquote > .editor-rich-text p,
.wp-block[data-type="core/pullquote"][data-align="left"] p,
.wp-block[data-type="core/pullquote"][data-align="right"] blockquote > .block-library-pullquote__content .editor-rich-text__tinymce[data-is-empty="true"]::before,
.wp-block[data-type="core/pullquote"][data-align="right"] blockquote > .editor-rich-text p,
.wp-block[data-type="core/pullquote"][data-align="right"] p {
  font-size: 1.6875em;
  font-style: italic;
  line-height: 1.3;
  margin-bottom: 0.5em;
  margin-top: 0.5em;
}

@media only screen and (min-width: 768px) {
  .wp-block[data-type="core/pullquote"] blockquote > .block-library-pullquote__content .editor-rich-text__tinymce[data-is-empty="true"]::before,
  .wp-block[data-type="core/pullquote"] blockquote > .editor-rich-text p,
  .wp-block[data-type="core/pullquote"] p,
  .wp-block[data-type="core/pullquote"][data-align="left"] blockquote > .block-library-pullquote__content .editor-rich-text__tinymce[data-is-empty="true"]::before,
  .wp-block[data-type="core/pullquote"][data-align="left"] blockquote > .editor-rich-text p,
  .wp-block[data-type="core/pullquote"][data-align="left"] p,
  .wp-block[data-type="core/pullquote"][data-align="right"] blockquote > .block-library-pullquote__content .editor-rich-text__tinymce[data-is-empty="true"]::before,
  .wp-block[data-type="core/pullquote"][data-align="right"] blockquote > .editor-rich-text p,
  .wp-block[data-type="core/pullquote"][data-align="right"] p {
    font-size: 2.25em;
  }
}

.wp-block[data-type="core/pullquote"] .wp-block-pullquote__citation,
.wp-block[data-type="core/pullquote"][data-align="left"] .wp-block-pullquote__citation,
.wp-block[data-type="core/pullquote"][data-align="right"] .wp-block-pullquote__citation {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 0.71111111em;
  line-height: 1.6;
  text-transform: none;
}

.wp-block[data-type="core/pullquote"] em,
.wp-block[data-type="core/pullquote"][data-align="left"] em,
.wp-block[data-type="core/pullquote"][data-align="right"] em {
  font-style: normal;
}

.wp-block[data-type="core/pullquote"][data-align="left"] .editor-block-list__block-edit,
.wp-block[data-type="core/pullquote"][data-align="right"] .editor-block-list__block-edit {
  width: calc(4 * (100vw / 12));
  max-width: 50%;
}

.wp-block[data-type="core/pullquote"][data-align="left"] .editor-block-list__block-edit .wp-block-pullquote:not(.is-style-solid-color),
.wp-block[data-type="core/pullquote"][data-align="right"] .editor-block-list__block-edit .wp-block-pullquote:not(.is-style-solid-color) {
  padding: 0;
}

.wp-block[data-type="core/pullquote"][data-align="left"] .editor-block-list__block-edit .wp-block-pullquote.is-style-solid-color,
.wp-block[data-type="core/pullquote"][data-align="right"] .editor-block-list__block-edit .wp-block-pullquote.is-style-solid-color {
  padding: 1em;
}

.wp-block[data-type="core/pullquote"][data-align="left"] blockquote > .block-library-pullquote__content .editor-rich-text__tinymce[data-is-empty="true"]::before,
.wp-block[data-type="core/pullquote"][data-align="left"] blockquote > .editor-rich-text p,
.wp-block[data-type="core/pullquote"][data-align="left"] p,
.wp-block[data-type="core/pullquote"][data-align="left"] .wp-block-pullquote__citation,
.wp-block[data-type="core/pullquote"][data-align="right"] blockquote > .block-library-pullquote__content .editor-rich-text__tinymce[data-is-empty="true"]::before,
.wp-block[data-type="core/pullquote"][data-align="right"] blockquote > .editor-rich-text p,
.wp-block[data-type="core/pullquote"][data-align="right"] p,
.wp-block[data-type="core/pullquote"][data-align="right"] .wp-block-pullquote__citation {
  text-align: left;
}

@media only screen and (min-width: 768px) {
  .wp-block[data-type="core/pullquote"][data-align="full"] .wp-block-pullquote blockquote {
    max-width: calc(80% - 128px);
  }
}

/** === Quote === */

.wp-block-quote:not(.is-large):not(.is-style-large) {
  border-left: 2px solid #5C6BC0;
}

.wp-block-quote.is-large,
.wp-block-quote.is-style-large {
  margin-top: 2.8125em;
  margin-bottom: 2.8125em;
}

.wp-block-quote.is-large p,
.wp-block-quote.is-style-large p {
  font-size: 1.6875em;
  line-height: 1.3;
  margin-bottom: 0.5em;
  margin-top: 0.5em;
}

.wp-block-quote cite,
.wp-block-quote footer,
.wp-block-quote .wp-block-quote__citation {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 0.71111111em;
  line-height: 1.6;
  color: #767676;
}

/** === Cover === */

.wp-block-cover h2,
.wp-block-cover .wp-block-cover-text {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 1.6875em;
  font-weight: bold;
  line-height: 1.4;
  padding-left: 1rem;
  padding-right: 1rem;
}

.wp-block-cover h2 strong,
.wp-block-cover .wp-block-cover-text strong {
  font-weight: bolder;
}

@media only screen and (min-width: 768px) {
  .wp-block-cover h2,
  .wp-block-cover .wp-block-cover-text {
    margin-left: auto;
    margin-right: auto;
    padding: 0;
  }
}

@media only screen and (min-width: 768px) {
  .wp-block-cover {
    padding-left: 10%;
    padding-right: 10%;
  }

  .wp-block-cover h2,
  .wp-block-cover .wp-block-cover-text {
    font-size: 2.25em;
  }
}

.wp-block[data-type="core/cover"][data-align="left"] .editor-block-list__block-edit,
.wp-block[data-type="core/cover"][data-align="right"] .editor-block-list__block-edit {
  width: calc(4 * (100vw / 12));
}

.wp-block[data-type="core/cover"][data-align="left"] .wp-block-cover,
.wp-block[data-type="core/cover"][data-align="right"] .wp-block-cover {
  width: 100%;
  max-width: 100%;
  padding: calc(1.375 * 1rem);
}

.wp-block[data-type="core/cover"][data-align="left"] .wp-block-cover p,
.wp-block[data-type="core/cover"][data-align="right"] .wp-block-cover p {
  padding-left: 0;
  padding-right: 0;
}

@media only screen and (min-width: 768px) {
  .wp-block[data-type="core/cover"][data-align="left"] .wp-block-cover,
  .wp-block[data-type="core/cover"][data-align="right"] .wp-block-cover {
    padding: calc(2.75 * 1rem) calc(2.75 * 1rem) calc(3.125 * 1rem);
  }
}

@media only screen and (min-width: 768px) {
  .wp-block[data-type="core/cover"][data-align="wide"] h2,
  .wp-block[data-type="core/cover"][data-align="wide"] .wp-block-cover-text,
  .wp-block[data-type="core/cover"][data-align="full"] h2,
  .wp-block[data-type="core/cover"][data-align="full"] .wp-block-cover-text {
    max-width: calc(8 * (100vw / 12));
  }
}

@media only screen and (min-width: 1168px) {
  .wp-block[data-type="core/cover"][data-align="wide"] h2,
  .wp-block[data-type="core/cover"][data-align="wide"] .wp-block-cover-text,
  .wp-block[data-type="core/cover"][data-align="full"] h2,
  .wp-block[data-type="core/cover"][data-align="full"] .wp-block-cover-text {
    max-width: calc(6 * (100vw / 12));
  }
}

@media only screen and (min-width: 768px) {
  .wp-block[data-type="core/cover"][data-align="full"] .wp-block-cover {
    padding-left: calc(10% + 64px);
    padding-right: calc(10% + 64px);
  }
}

/** === Gallery === */

.wp-block-gallery .blocks-gallery-image figcaption,
.wp-block-gallery .blocks-gallery-item figcaption,
.wp-block-gallery .gallery-item .gallery-caption {
  font-size: 0.71111111em;
  line-height: 1.6;
}

/** === Separator === */

.wp-block-separator:not(.is-style-dots) {
  border-bottom: 2px solid #767676;
}

.wp-block-separator:not(.is-style-wide):not(.is-style-dots) {
  width: 2.25em;
  margin-left: 0;
}

.wp-block-separator.is-style-dots:before {
  color: #767676;
  font-size: 1.6875em;
  letter-spacing: calc(2 * 1rem);
  padding-left: calc(2 * 1rem);
}

/* Remove duplicate rule-line when a separator
 * is followed by an H1, or H2 */

.wp-block[data-type="core/separator"] + .wp-block[data-type="core/heading"] h1:before,
.wp-block[data-type="core/separator"] + .wp-block[data-type="core/heading"] h2:before {
  display: none;
}

/** === Table === */

.wp-block-table td,
.wp-block-table th {
  border-color: #767676;
}

/** === File === */

.wp-block-file {
  font-family: "Roboto Condensed", sans-serif;
}

.wp-block-file .wp-block-file__textlink {
  text-decoration: underline;
  color: #5C6BC0;
}

.wp-block-file .wp-block-file__textlink:hover {
  color: #4150a8;
  text-decoration: none;
}

.wp-block-file .wp-block-file__button {
  display: table;
  line-height: 1.8;
  font-size: 0.88888889em;
  font-weight: bold;
  background-color: #5C6BC0;
  border-radius: 5px;
}

.wp-block-file .wp-block-file__button-richtext-wrapper {
  display: block;
  margin-top: calc(0.75 * 1rem);
  margin-left: 0;
}

/** === Code === */

.wp-block-code {
  border-radius: 0;
}

/** === Latest Comments === */

.wp-block-latest-comments .wp-block-latest-comments__comment-meta {
  font-family: "Roboto Condensed", sans-serif;
  font-weight: bold;
}

.wp-block-latest-comments .wp-block-latest-comments__comment-meta .wp-block-latest-comments__comment-date {
  font-weight: normal;
}

.wp-block-latest-comments .wp-block-latest-comments__comment,
.wp-block-latest-comments .wp-block-latest-comments__comment-date,
.wp-block-latest-comments .wp-block-latest-comments__comment-excerpt p {
  font-size: inherit;
}

.wp-block-latest-comments .wp-block-latest-comments__comment-date {
  font-size: 0.71111111em;
}

/** === Classic Editor === */

/* Properly center-align captions in the classic-editor block */

.wp-caption dd {
  color: #767676;
  font-size: 0.71111111em;
  font-family: "Roboto Condensed", sans-serif;
  line-height: 1.6;
  margin: 0;
  padding: 0.5rem;
  text-align: left;
  text-align: center;
  -webkit-margin-start: 0px;
  margin-inline-start: 0px;
}

.wp-block-freeform {
  /* Add style for galleries in classic-editor block */
}

.wp-block-freeform blockquote {
  border-left: 2px solid #5C6BC0;
}

.wp-block-freeform blockquote cite {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 0.71111111em;
  font-style: normal;
  line-height: 1.6;
  color: #767676;
}

/* Make sure our non-latin font overrides don't overwrite the iconfont used in the classic editor toolbar */

.wp-block[data-type="core/freeform"] .mce-btn i {
  font-family: dashicons !important;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/