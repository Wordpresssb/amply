@charset "UTF-8";

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

::-moz-selection {
  background-color: #d6daef;
}

::selection {
  background-color: #d6daef;
}

/**
 * Inherit box-sizing to make it easier to change the property for
 * components that leverage other behavior; see
 * http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

body {
  overflow-x: hidden;
  background: #fff;
}

hr {
  background-color: #767676;
  border: 0;
  height: 2px;
}

ul,
ol {
  padding-left: 1rem;
}

ul {
  list-style: disc;
}

ul ul {
  list-style-type: circle;
}

ol {
  list-style: decimal;
}

li {
  line-height: 1.8;
}

li > ul,
li > ol {
  padding-left: 2rem;
}

dt {
  font-weight: bold;
}

dd {
  margin: 0 1rem 1rem;
}

img {
  display: block;
  height: auto;
  max-width: 100%;
  position: relative;
}

figure {
  margin: 0.5em 0;
}

blockquote {
  border-left: 2px solid #5C6BC0;
  margin-left: 0;
  padding: 0 0 0 1rem;
}

blockquote > p {
  margin: 0 0 1rem;
}

blockquote cite {
  color: #767676;
}

table {
  margin: 0 0 1rem;
  border-collapse: collapse;
  width: 100%;
  font-family: "Roboto Condensed", sans-serif;
}

table td,
table th {
  padding: 0.5em;
  border: 1px solid #767676;
  word-break: break-all;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  clear: both;
  margin: 1rem 0;
}

html {
  font-size: 22px;
}

body {
  color: #111;
  font-family: "Crimson Text", serif;
  font-size: 1em;
  font-weight: 400;
  line-height: 1.8;
}

button,
input,
select,
optgroup,
textarea {
  color: #111;
  font-family: "Crimson Text", serif;
  font-weight: 400;
  line-height: 1.8;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Roboto Condensed", sans-serif;
  font-weight: 700;
  letter-spacing: -0.02em;
  line-height: 1.2;
}

h1 {
  font-size: 2.25em;
}

@media only screen and (min-width: 768px) {
  h1 {
    font-size: 2.8125em;
  }
}

h2 {
  font-size: 1.6875em;
}

@media only screen and (min-width: 768px) {
  h2 {
    font-size: 2.25em;
  }
}

h3 {
  font-size: 1.6875em;
}

h4 {
  font-size: 1.125em;
}

h5 {
  font-size: 0.88888889em;
}

h6 {
  font-size: 0.71111111em;
}

p {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

dfn,
cite,
em,
i {
  font-style: italic;
}

blockquote cite {
  font-size: 0.71111111em;
  font-style: normal;
  font-family: "Roboto Condensed", sans-serif;
}

pre {
  font-size: 0.88888889em;
  font-family: "Courier 10 Pitch", Courier, monospace;
  line-height: 1.8;
  overflow: auto;
}

code,
kbd,
tt,
var {
  font-size: 0.88888889em;
  font-family: Menlo, monaco, Consolas, Lucida Console, monospace;
}

abbr,
acronym {
  border-bottom: 1px dotted #666;
  cursor: help;
}

mark,
ins {
  background: #fff9c0;
  text-decoration: none;
}

big {
  font-size: 125%;
}

/* Arabic */

html[lang="ar"] .site *,
html[lang="ary"] .site *,
html[lang="azb"] .site *,
html[lang="ckb"] .site *,
html[lang="fa-IR"] .site *,
html[lang="haz"] .site *,
html[lang="ps"] .site * {
  font-family: Tahoma, Arial, sans-serif !important;
}

/* Cyrillic */

html[lang="be"] .site *,
html[lang="bg-BG"] .site *,
html[lang="kk"] .site *,
html[lang="mk-MK"] .site *,
html[lang="mn"] .site *,
html[lang="ru-RU"] .site *,
html[lang="sah"] .site *,
html[lang="sr-RS"] .site *,
html[lang="tt-RU"] .site *,
html[lang="uk"] .site * {
  font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, sans-serif !important;
}

/* Chinese (Hong Kong) */

html[lang="zh-HK"] .site * {
  font-family: -apple-system, BlinkMacSystemFont, 'PingFang HK', 'Helvetica Neue', "Microsoft YaHei New", STHeiti Light, sans-serif !important;
}

/* Chinese (Taiwan) */

html[lang="zh-TW"] .site * {
  font-family: -apple-system, BlinkMacSystemFont, 'PingFang TC', 'Helvetica Neue', "Microsoft YaHei New", STHeiti Light, sans-serif !important;
}

/* Chinese (China) */

html[lang="zh-CN"] .site * {
  font-family: -apple-system, BlinkMacSystemFont, 'PingFang SC', 'Helvetica Neue', "Microsoft YaHei New", STHeiti Light, sans-serif !important;
}

/* Devanagari */

html[lang="bn-BD"] .site *,
html[lang="hi-IN"] .site *,
html[lang="mr"] .site *,
html[lang="ne-NP"] .site * {
  font-family: Arial, sans-serif !important;
}

/* Greek */

html[lang="el"] .site * {
  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif !important;
}

/* Gujarati */

html[lang="gu"] .site * {
  font-family: Arial, sans-serif !important;
}

/* Hebrew */

html[lang="he-IL"] .site * {
  font-family: 'Arial Hebrew', Arial, sans-serif !important;
}

/* Japanese */

html[lang="ja"] .site * {
  font-family: -apple-system, BlinkMacSystemFont, "Hiragino Sans", Meiryo, "Helvetica Neue", sans-serif !important;
}

/* Korean */

html[lang="ko-KR"] .site * {
  font-family: 'Apple SD Gothic Neo', 'Malgun Gothic', 'Nanum Gothic', Dotum, sans-serif !important;
}

/* Thai */

html[lang="th"] .site * {
  font-family: 'Sukhumvit Set', 'Helvetica Neue', helvetica, arial, sans-serif !important;
}

/* Vietnamese */

html[lang="vi"] .site * {
  font-family: 'Libre Franklin', sans-serif !important;
}

a {
  -webkit-transition: color 110ms ease-in-out;
  transition: color 110ms ease-in-out;
  color: #5C6BC0;
  text-decoration: none;
}

a:visited {
  color: #5C6BC0;
}

a:hover,
a:active {
  color: #4150a8;
  outline: 0;
  text-decoration: none;
}

a:focus {
  outline: thin dotted;
  text-decoration: underline;
}

button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-transition: background 150ms ease-in-out;
  transition: background 150ms ease-in-out;
  background: #5C6BC0;
  border: none;
  border-radius: 5px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  color: #fff;
  font-family: "Roboto Condensed", sans-serif;
  font-size: 0.88888889em;
  font-weight: 700;
  line-height: 1.2;
  outline: none;
  padding: 0.76rem 1rem;
  text-decoration: none;
  vertical-align: bottom;
}

button:hover,
input[type="button"]:hover,
input[type="reset"]:hover,
input[type="submit"]:hover {
  background: #111;
  cursor: pointer;
}

button:visited,
input[type="button"]:visited,
input[type="reset"]:visited,
input[type="submit"]:visited {
  color: #fff;
  text-decoration: none;
}

button:focus,
input[type="button"]:focus,
input[type="reset"]:focus,
input[type="submit"]:focus {
  background: #111;
  outline: thin dotted;
  outline-offset: -4px;
}

input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="tel"],
input[type="range"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="color"],
textarea {
  -webkit-backface-visibility: hidden;
  background: #fff;
  border: solid 1px #ccc;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  outline: none;
  padding: 0.36rem 0.66rem;
  -webkit-appearance: none;
  outline-offset: 0;
  border-radius: 0;
}

input[type="text"]:focus,
input[type="email"]:focus,
input[type="url"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
input[type="number"]:focus,
input[type="tel"]:focus,
input[type="range"]:focus,
input[type="date"]:focus,
input[type="month"]:focus,
input[type="week"]:focus,
input[type="time"]:focus,
input[type="datetime"]:focus,
input[type="datetime-local"]:focus,
input[type="color"]:focus,
textarea:focus {
  border-color: #5C6BC0;
  outline: thin solid rgba(92, 107, 192, 0.15);
  outline-offset: -4px;
}

/* clears the 'X' from Internet Explorer */

input[type=search]::-ms-clear {
  display: none;
  width: 0;
  height: 0;
}

input[type=search]::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

/* clears the 'X' from Chrome */

input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

select {
  border: 1px solid #ccc;
}

textarea {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  display: block;
  width: 100%;
  max-width: 100%;
  resize: vertical;
}

form p {
  margin: 1rem 0;
}

.primary-menu {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.primary-menu > li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-right: 0.5rem;
  position: relative;
}

.primary-menu > li:hover a,
.primary-menu > li:hover svg {
  opacity: 0.6;
}

.primary-menu > li > a {
  color: #111111;
}

.primary-menu .sub-menu {
  position: absolute;
  opacity: 0;
  left: -9999px;
  z-index: 99999;
  background: #cacaca;
  list-style: none;
  margin-left: 0;
  padding-left: 0;
}

.primary-menu .sub-menu > li > a {
  display: block;
  line-height: 1.2;
  padding: calc( .5 * 1rem) calc( 24px + 1rem) calc( .5 * 1rem) 1rem;
  white-space: nowrap;
  color: #ffffff;
}

.primary-menu .sub-menu > li > a:hover,
.primary-menu .sub-menu > li > a:focus {
  background: #dadada;
}

.primary-menu .menu-item-has-children:hover > .sub-menu,
.primary-menu .menu-item-has-children:focus > .sub-menu {
  display: block;
  margin-top: 0;
  opacity: 1;
  position: absolute;
  right: 0;
  top: 100%;
  left: auto;
  bottom: auto;
  height: auto;
  min-width: -webkit-max-content;
  min-width: -moz-max-content;
  min-width: max-content;
  -webkit-transform: none;
          transform: none;
}

.primary-menu .menu-item-has-children:hover > .sub-menu .svg-icon,
.primary-menu .menu-item-has-children:focus > .sub-menu .svg-icon {
  display: none;
}

.primary-menu .menu-item-has-children:hover > .sub-menu .sub-menu,
.primary-menu .menu-item-has-children:focus > .sub-menu .sub-menu {
  display: block;
  margin-top: inherit;
  position: relative;
  width: 100%;
  left: 0;
  opacity: 1;
}

.primary-menu .menu-item-has-children:hover > .sub-menu .sub-menu,
.primary-menu .menu-item-has-children:focus > .sub-menu .sub-menu {
  counter-reset: submenu;
}

.primary-menu .menu-item-has-children:hover > .sub-menu .sub-menu > li > a::before,
.primary-menu .menu-item-has-children:focus > .sub-menu .sub-menu > li > a::before {
  content: "\2013\A0" counters(submenu, "\2013\A0", none);
  counter-increment: submenu;
}

.primary-menu .menu-item-has-children:focus-within > .sub-menu {
  display: block;
  margin-top: 0;
  opacity: 1;
  position: absolute;
  right: 0;
  top: 100%;
  left: auto;
  bottom: auto;
  height: auto;
  min-width: -webkit-max-content;
  min-width: -moz-max-content;
  min-width: max-content;
  -webkit-transform: none;
          transform: none;
}

.primary-menu .menu-item-has-children:focus-within > .sub-menu .svg-icon {
  display: none;
}

.primary-menu .menu-item-has-children:focus-within > .sub-menu .sub-menu {
  display: block;
  margin-top: inherit;
  position: relative;
  width: 100%;
  left: 0;
  opacity: 1;
}

.primary-menu .menu-item-has-children:focus-within > .sub-menu .sub-menu {
  counter-reset: submenu;
}

.primary-menu .menu-item-has-children:focus-within > .sub-menu .sub-menu > li > a::before {
  content: "\2013\A0" counters(submenu, "\2013\A0", none);
  counter-increment: submenu;
}

.site-social-nav .social-menu {
  margin: 0;
  padding: 0;
}

.site-social-nav .social-menu li {
  display: inline-block;
  vertical-align: bottom;
  list-style: none;
}

.site-social-nav .social-menu li:nth-child(n+2) {
  margin-left: 0.1em;
}

.site-social-nav .social-menu li a {
  border-bottom: 1px solid transparent;
  display: block;
  margin-bottom: -1px;
  -webkit-transition: opacity 110ms ease-in-out;
  transition: opacity 110ms ease-in-out;
  color: #111111;
}

.site-social-nav .social-menu li a:visited {
  color: #111111;
}

.site-social-nav .social-menu li a:hover,
.site-social-nav .social-menu li a:active {
  color: #111111;
  opacity: 0.6;
}

.site-social-nav .social-menu li a:focus {
  color: #111111;
  opacity: 1;
}

.site-social-nav .social-menu li a svg {
  display: block;
  width: 32px;
  height: 32px;
}

.site-logo {
  line-height: 0;
  max-width: 40px;
}

@media only screen and (min-width: 1168px) {
  .site-logo {
    max-width: 50px;
  }
}

.site-logo img {
  display: inline-block;
}

.site-search-icon {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin: 5px 5px 5px 10px;
  cursor: pointer;
}

.site-search-form .search-form {
  position: relative;
  max-width: 250px;
}

.site-search-form .search-field {
  height: 35px;
  width: 100%;
  font-size: 16px;
  padding: 7px;
  margin: 0;
  background-color: #ffffff;
  color: #111111;
}

.site-search-form .search-submit {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  background: transparent;
  border: none;
  padding: 0 10px;
  cursor: pointer;
}

.mobile-menu-trigger {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin: 5px 5px 5px 10px;
  cursor: pointer;
}

/* Next/Previous navigation */

.widget {
  margin: 0 0 1rem;
  /* Make sure select, input elements fit in widgets. */
}

.widget select {
  max-width: 100%;
}

.widget_archive ul,
.widget_categories ul,
.widget_meta ul,
.widget_nav_menu ul,
.widget_pages ul,
.widget_recent_comments ul,
.widget_recent_entries ul,
.widget_rss ul {
  padding: 0;
  list-style: none;
}

.widget_archive ul li,
.widget_categories ul li,
.widget_meta ul li,
.widget_nav_menu ul li,
.widget_pages ul li,
.widget_recent_comments ul li,
.widget_recent_entries ul li,
.widget_rss ul li {
  color: #767676;
  font-family: "Roboto Condensed", sans-serif;
  font-size: calc(22px * 1.125);
  font-weight: 700;
  line-height: 1.2;
  margin: 0.5rem 0;
}

.widget_archive ul ul,
.widget_categories ul ul,
.widget_meta ul ul,
.widget_nav_menu ul ul,
.widget_pages ul ul,
.widget_recent_comments ul ul,
.widget_recent_entries ul ul,
.widget_rss ul ul {
  counter-reset: submenu;
}

.widget_archive ul ul > li > a::before,
.widget_categories ul ul > li > a::before,
.widget_meta ul ul > li > a::before,
.widget_nav_menu ul ul > li > a::before,
.widget_pages ul ul > li > a::before,
.widget_recent_comments ul ul > li > a::before,
.widget_recent_entries ul ul > li > a::before,
.widget_rss ul ul > li > a::before {
  font-family: "Crimson Text", serif;
  font-weight: normal;
  content: "\2013\A0" counters(submenu, "\2013\A0", none);
  counter-increment: submenu;
}

.widget_tag_cloud .tagcloud {
  font-family: "Roboto Condensed", sans-serif;
  font-weight: 700;
}

.widget_search .search-field {
  width: 100%;
  max-width: 100%;
}

.widget_search .search-submit {
  display: block;
  margin-top: 1rem;
}

.widget_calendar .calendar_wrap {
  text-align: center;
}

.widget_calendar .calendar_wrap table td,
.widget_calendar .calendar_wrap table th {
  border: none;
}

.widget_calendar .calendar_wrap a {
  text-decoration: underline;
}

.site {
  margin: 0 auto;
  width: 100%;
}

.site-content {
  max-width: calc(100% - (2 * 1rem));
  margin: 0 1rem;
}

@media only screen and (min-width: 768px) {
  .site-content {
    max-width: 80%;
    margin: 0 calc((100% - 80%) / 2);
    padding: 0 60px;
  }
}

@media only screen and (min-width: 1168px) {
  .has-sidebar-right .site-content {
    display: grid;
    grid-template-columns: 3fr 1fr;
    grid-gap: 1rem;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }

  .has-sidebar-right .site-content .site-main {
    grid-column: 1;
    min-width: 0;
  }

  .has-sidebar-right .site-content .site-sidebar-right {
    grid-column: 2;
    min-width: 0;
  }
}

@media only screen and (min-width: 1168px) {
  .has-sidebar-left .site-content {
    display: grid;
    grid-template-columns: 1fr 3fr;
    grid-gap: 1rem;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }

  .has-sidebar-left .site-content .site-sidebar-left {
    grid-column: 1;
    min-width: 0;
  }

  .has-sidebar-left .site-content .site-main {
    grid-column: 2;
    min-width: 0;
  }
}

@media only screen and (min-width: 1168px) {
  .has-sidebar-both .site-content {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    grid-gap: 1rem;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }

  .has-sidebar-both .site-content .site-sidebar-left {
    grid-column: 1;
    min-width: 0;
  }

  .has-sidebar-both .site-content .site-main {
    grid-column: 2;
    min-width: 0;
  }

  .has-sidebar-both .site-content .site-sidebar-right {
    grid-column: 3;
    min-width: 0;
  }
}

.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  word-wrap: normal !important;
}

.screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  -webkit-box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
          box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  color: #21759b;
  display: block;
  font-size: 0.875rem;
  font-weight: 700;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
  /* Above WP toolbar. */
}

/* Do not show the outline on the skip link target. */

#content[tabindex="-1"]:focus {
  outline: 0;
}

.alignleft {
  /*rtl:ignore*/
  float: left;
  /*rtl:ignore*/
  margin-right: 1rem;
}

@media only screen and (min-width: 768px) {
  .alignleft {
    /*rtl:ignore*/
    margin-right: calc(2 * 1rem);
  }
}

.alignright {
  /*rtl:ignore*/
  float: right;
  /*rtl:ignore*/
  margin-left: 1rem;
}

@media only screen and (min-width: 768px) {
  .alignright {
    /*rtl:ignore*/
    margin-left: calc(2 * 1rem);
  }
}

.aligncenter {
  clear: both;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.clear:before,
.clear:after,
.entry-content:before,
.entry-content:after,
.comment-content:before,
.comment-content:after,
.site-header:before,
.site-header:after,
.site-content:before,
.site-content:after,
.site-footer:before,
.site-footer:after {
  content: "";
  display: table;
  table-layout: fixed;
}

.clear:after,
.entry-content:after,
.comment-content:after,
.site-header:after,
.site-content:after,
.site-footer:after {
  clear: both;
}

.page-content .wp-smiley,
.entry-content .wp-smiley,
.comment-content .wp-smiley {
  border: none;
  margin-bottom: 0;
  margin-top: 0;
  padding: 0;
}

embed,
iframe,
object {
  max-width: 100%;
}

.avatar {
  border-radius: 100%;
  display: block;
  height: calc(2.25 * 1rem);
  min-height: inherit;
  width: calc(2.25 * 1rem);
}

svg {
  fill: currentColor;
}

.wp-caption {
  margin-bottom: calc(1.6 * 1rem);
}

.wp-caption img[class*="wp-image-"] {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.wp-caption-text {
  color: #767676;
  font-size: 0.71111111em;
  font-family: "Roboto Condensed", sans-serif;
  line-height: 1.6;
  margin: 0;
  padding: 0.5rem;
  text-align: center;
}

.gallery {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin-bottom: calc(1.5 * 1rem);
}

.gallery-item {
  display: inline-block;
  margin-right: 16px;
  margin-bottom: 16px;
  text-align: center;
  vertical-align: top;
  width: 100%;
}

.gallery-columns-2 .gallery-item {
  max-width: calc((100% - 16px * 1) / 2);
}

.gallery-columns-2 .gallery-item:nth-of-type(2n+2) {
  margin-right: 0;
}

.gallery-columns-3 .gallery-item {
  max-width: calc((100% - 16px * 2) / 3);
}

.gallery-columns-3 .gallery-item:nth-of-type(3n+3) {
  margin-right: 0;
}

.gallery-columns-4 .gallery-item {
  max-width: calc((100% - 16px * 3) / 4);
}

.gallery-columns-4 .gallery-item:nth-of-type(4n+4) {
  margin-right: 0;
}

.gallery-columns-5 .gallery-item {
  max-width: calc((100% - 16px * 4) / 5);
}

.gallery-columns-5 .gallery-item:nth-of-type(5n+5) {
  margin-right: 0;
}

.gallery-columns-6 .gallery-item {
  max-width: calc((100% - 16px * 5) / 6);
}

.gallery-columns-6 .gallery-item:nth-of-type(6n+6) {
  margin-right: 0;
}

.gallery-columns-7 .gallery-item {
  max-width: calc((100% - 16px * 6) / 7);
}

.gallery-columns-7 .gallery-item:nth-of-type(7n+7) {
  margin-right: 0;
}

.gallery-columns-8 .gallery-item {
  max-width: calc((100% - 16px * 7) / 8);
}

.gallery-columns-8 .gallery-item:nth-of-type(8n+8) {
  margin-right: 0;
}

.gallery-columns-9 .gallery-item {
  max-width: calc((100% - 16px * 8) / 9);
}

.gallery-columns-9 .gallery-item:nth-of-type(9n+9) {
  margin-right: 0;
}

.gallery-item:last-of-type {
  padding-right: 0;
}

.gallery-caption {
  display: block;
  font-size: 0.71111111em;
  font-family: "Roboto Condensed", sans-serif;
  line-height: 1.6;
  margin: 0;
  padding: 0.5rem;
}

.gallery-item > div > a {
  display: block;
  line-height: 0;
  -webkit-box-shadow: 0 0 0 0 transparent;
          box-shadow: 0 0 0 0 transparent;
}

.gallery-item > div > a:focus {
  -webkit-box-shadow: 0 0 0 2px #5c6bc0;
          box-shadow: 0 0 0 2px #5c6bc0;
}

.entry-content > * {
  margin: 32px 0;
  max-width: 100%;
}

.entry-content > * > *:first-child {
  margin-top: 0;
}

.entry-content > * > *:last-child {
  margin-bottom: 0;
}

.entry-content > *.alignwide {
  margin-left: auto;
  margin-right: auto;
  clear: both;
}

@media only screen and (min-width: 768px) {
  .entry-content > *.alignwide {
    width: 100%;
    max-width: 100%;
  }
}

.entry-content > *.alignfull {
  width: 100vw;
  max-width: 100vw;
  margin-left: calc( 50% - 50vw);
}

.entry-content > *.alignleft {
  /*rtl:ignore*/
  float: left;
  max-width: 45%;
  margin-top: 0;
  margin-left: 0;
  /*rtl:ignore*/
  margin-right: 1rem;
}

@media only screen and (min-width: 768px) {
  .entry-content > *.alignleft {
    /*rtl:ignore*/
    margin-right: calc(2 * 1rem);
  }
}

.entry-content > *.alignright {
  /*rtl:ignore*/
  float: right;
  max-width: 45%;
  margin-top: 0;
  margin-right: 0;
  /*rtl:ignore*/
  margin-left: 1rem;
}

@media only screen and (min-width: 768px) {
  .entry-content > *.alignright {
    max-width: calc(4 * (100vw / 12));
    margin-right: 0;
    /*rtl:ignore*/
    margin-left: calc(2 * 1rem);
  }
}

.entry-content > *.aligncenter {
  margin-left: auto;
  margin-right: auto;
}

@media only screen and (min-width: 768px) {
  .entry-content > *.aligncenter {
    margin-left: 0;
    margin-right: 0;
  }
}

.entry .entry-content .has-drop-cap:not(:focus):first-letter {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 3.375em;
  line-height: 1;
  font-weight: bold;
  margin: 0 0.25em 0 0;
}

.entry .entry-content .wp-block-audio figcaption,
.entry .entry-content .wp-block-video figcaption,
.entry .entry-content .wp-block-image figcaption,
.entry .entry-content .wp-block-gallery .blocks-gallery-image figcaption,
.entry .entry-content .wp-block-gallery .blocks-gallery-item figcaption {
  font-size: 0.71111111em;
  font-family: "Roboto Condensed", sans-serif;
  line-height: 1.6;
  margin: 0;
  padding: 0.5rem;
  text-align: center;
}

.entry .entry-content select {
  height: 36px;
  font-size: 16px;
  padding: 2px;
  line-height: 28px;
  vertical-align: middle;
  -webkit-transition: -webkit-box-shadow .1s linear;
  transition: -webkit-box-shadow .1s linear;
  transition: box-shadow .1s linear;
  transition: box-shadow .1s linear, -webkit-box-shadow .1s linear;
  border-radius: 4px;
  border: 1px solid #767676;
  color: #767676;
  background-color: #fff;
}

@media only screen and (min-width: 768px) {
  .entry .entry-content select {
    height: 28px;
    font-size: 13px;
  }
}

.entry .entry-content .has-primary-background-color,
.entry .entry-content .has-secondary-background-color,
.entry .entry-content .has-dark-gray-background-color,
.entry .entry-content .has-light-gray-background-color {
  color: #fff;
}

.entry .entry-content .has-primary-background-color p,
.entry .entry-content .has-primary-background-color h1,
.entry .entry-content .has-primary-background-color h2,
.entry .entry-content .has-primary-background-color h3,
.entry .entry-content .has-primary-background-color h4,
.entry .entry-content .has-primary-background-color h5,
.entry .entry-content .has-primary-background-color h6,
.entry .entry-content .has-primary-background-color a,
.entry .entry-content .has-secondary-background-color p,
.entry .entry-content .has-secondary-background-color h1,
.entry .entry-content .has-secondary-background-color h2,
.entry .entry-content .has-secondary-background-color h3,
.entry .entry-content .has-secondary-background-color h4,
.entry .entry-content .has-secondary-background-color h5,
.entry .entry-content .has-secondary-background-color h6,
.entry .entry-content .has-secondary-background-color a,
.entry .entry-content .has-dark-gray-background-color p,
.entry .entry-content .has-dark-gray-background-color h1,
.entry .entry-content .has-dark-gray-background-color h2,
.entry .entry-content .has-dark-gray-background-color h3,
.entry .entry-content .has-dark-gray-background-color h4,
.entry .entry-content .has-dark-gray-background-color h5,
.entry .entry-content .has-dark-gray-background-color h6,
.entry .entry-content .has-dark-gray-background-color a,
.entry .entry-content .has-light-gray-background-color p,
.entry .entry-content .has-light-gray-background-color h1,
.entry .entry-content .has-light-gray-background-color h2,
.entry .entry-content .has-light-gray-background-color h3,
.entry .entry-content .has-light-gray-background-color h4,
.entry .entry-content .has-light-gray-background-color h5,
.entry .entry-content .has-light-gray-background-color h6,
.entry .entry-content .has-light-gray-background-color a {
  color: #fff;
}

.entry .entry-content .has-white-background-color {
  color: #111;
}

.entry .entry-content .has-white-background-color p,
.entry .entry-content .has-white-background-color h1,
.entry .entry-content .has-white-background-color h2,
.entry .entry-content .has-white-background-color h3,
.entry .entry-content .has-white-background-color h4,
.entry .entry-content .has-white-background-color h5,
.entry .entry-content .has-white-background-color h6,
.entry .entry-content .has-white-background-color a {
  color: #111;
}

.entry .entry-content .has-dark-gray-background-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color.has-dark-gray-background-color {
  background-color: #111;
}

.entry .entry-content .has-light-gray-background-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color.has-light-gray-background-color {
  background-color: #767676;
}

.entry .entry-content .has-white-background-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color.has-white-background-color {
  background-color: #fff;
}

.entry .entry-content .has-dark-gray-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-dark-gray-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-dark-gray-color p {
  color: #111;
}

.entry .entry-content .has-light-gray-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-light-gray-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-light-gray-color p {
  color: #767676;
}

.entry .entry-content .has-white-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-white-color {
  color: #fff;
}

.entry .entry-content .has-small-font-size {
  font-size: 0.88888889em;
}

.entry .entry-content .has-normal-font-size {
  font-size: 22px;
}

.entry .entry-content .has-large-font-size {
  font-size: 1.6875em;
}

.entry .entry-content .has-huge-font-size {
  font-size: 2.25em;
}

.entry .entry-content .wp-block-audio {
  width: 100%;
}

.entry .entry-content .wp-block-audio audio {
  width: 100%;
}

.entry .entry-content .wp-block-audio.alignleft audio,
.entry .entry-content .wp-block-audio.alignright audio {
  max-width: 198px;
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-audio.alignleft audio,
  .entry .entry-content .wp-block-audio.alignright audio {
    max-width: 384px;
  }
}

@media only screen and (min-width: 1379px) {
  .entry .entry-content .wp-block-audio.alignleft audio,
  .entry .entry-content .wp-block-audio.alignright audio {
    max-width: 385.44px;
  }
}

.entry .entry-content .wp-block-button .wp-block-button__link {
  -webkit-transition: background 150ms ease-in-out;
  transition: background 150ms ease-in-out;
  border: none;
  font-size: 0.88888889em;
  font-family: "Roboto Condensed", sans-serif;
  line-height: 1.2;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-weight: bold;
  text-decoration: none;
  padding: 0.76rem 1rem;
  outline: none;
  outline: none;
}

.entry .entry-content .wp-block-button .wp-block-button__link:not(.has-background) {
  background-color: #5C6BC0;
}

.entry .entry-content .wp-block-button .wp-block-button__link:not(.has-text-color) {
  color: #fff;
}

.entry .entry-content .wp-block-button .wp-block-button__link:hover {
  color: white;
  background: #111;
  cursor: pointer;
}

.entry .entry-content .wp-block-button .wp-block-button__link:focus {
  color: white;
  background: #111;
  outline: thin dotted;
  outline-offset: -4px;
}

.entry .entry-content .wp-block-button:not(.is-style-squared) .wp-block-button__link {
  border-radius: 5px;
}

.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link,
.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link:focus,
.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link:active {
  border-width: 2px;
  border-style: solid;
}

.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link:not(.has-background),
.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link:focus:not(.has-background),
.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link:active:not(.has-background) {
  background: transparent;
}

.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link:not(.has-text-color),
.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link:focus:not(.has-text-color),
.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link:active:not(.has-text-color) {
  color: #5C6BC0;
  border-color: currentColor;
}

.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link:hover {
  color: white;
  border-color: #111;
}

.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link:hover:not(.has-background) {
  color: #111;
}

.entry .entry-content .wp-block-archives,
.entry .entry-content .wp-block-categories {
  padding: 0;
  list-style: none;
}

.entry .entry-content .wp-block-archives li,
.entry .entry-content .wp-block-categories li {
  color: #767676;
  font-family: "Roboto Condensed", sans-serif;
  font-size: calc(22px * 1.125);
  font-weight: bold;
  line-height: 1.2;
  padding-bottom: 0.75rem;
}

.entry .entry-content .wp-block-archives li.menu-item-has-children,
.entry .entry-content .wp-block-archives li:last-child,
.entry .entry-content .wp-block-categories li.menu-item-has-children,
.entry .entry-content .wp-block-categories li:last-child {
  padding-bottom: 0;
}

.entry .entry-content .wp-block-archives li a,
.entry .entry-content .wp-block-categories li a {
  text-decoration: none;
}

.entry .entry-content .wp-block-archives.aligncenter,
.entry .entry-content .wp-block-categories.aligncenter {
  text-align: center;
}

.entry .entry-content .wp-block-categories ul {
  padding-top: 0.75rem;
}

.entry .entry-content .wp-block-categories li ul {
  list-style: none;
  padding-left: 0;
}

.entry .entry-content .wp-block-categories ul {
  counter-reset: submenu;
}

.entry .entry-content .wp-block-categories ul > li > a::before {
  font-family: "Crimson Text", serif;
  font-weight: normal;
  content: "\2013\A0" counters(submenu, "\2013\A0", none);
  counter-increment: submenu;
}

.entry .entry-content .wp-block-archives-dropdown select,
.entry .entry-content .wp-block-categories-dropdown select {
  width: auto;
}

.entry .entry-content .wp-block-code {
  border-radius: 0;
}

.entry .entry-content .wp-block-code code {
  font-size: 1.125em;
  white-space: pre-wrap;
  word-break: break-word;
}

.entry .entry-content .wp-block-columns.alignfull {
  padding-left: 1rem;
  padding-right: 1rem;
}

@media only screen and (min-width: 600px) {
  .entry .entry-content .wp-block-columns {
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
  }
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-columns .wp-block-column > *:first-child {
    margin-top: 0;
  }

  .entry .entry-content .wp-block-columns .wp-block-column > *:last-child {
    margin-bottom: 0;
  }

  .entry .entry-content .wp-block-columns[class*='has-'] > * {
    margin-right: 1rem;
  }

  .entry .entry-content .wp-block-columns[class*='has-'] > *:last-child {
    margin-right: 0;
  }

  .entry .entry-content .wp-block-columns.alignfull,
  .entry .entry-content .wp-block-columns.alignfull .wp-block-column {
    padding-left: calc(2 * 1rem);
    padding-right: calc(2 * 1rem);
  }
}

.entry .entry-content .wp-block-cover-image,
.entry .entry-content .wp-block-cover {
  position: relative;
  min-height: 430px;
  padding: 1rem;
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-cover-image,
  .entry .entry-content .wp-block-cover {
    padding: 1rem 10%;
  }
}

.entry .entry-content .wp-block-cover-image .wp-block-cover-image-text,
.entry .entry-content .wp-block-cover-image .wp-block-cover-text,
.entry .entry-content .wp-block-cover-image h2,
.entry .entry-content .wp-block-cover .wp-block-cover-image-text,
.entry .entry-content .wp-block-cover .wp-block-cover-text,
.entry .entry-content .wp-block-cover h2 {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 1.6875em;
  font-weight: bold;
  line-height: 1.25;
  padding: 0;
  color: #fff;
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-cover-image .wp-block-cover-image-text,
  .entry .entry-content .wp-block-cover-image .wp-block-cover-text,
  .entry .entry-content .wp-block-cover-image h2,
  .entry .entry-content .wp-block-cover .wp-block-cover-image-text,
  .entry .entry-content .wp-block-cover .wp-block-cover-text,
  .entry .entry-content .wp-block-cover h2 {
    font-size: 2.25em;
    max-width: 100%;
  }
}

.entry .entry-content .wp-block-cover-image.alignleft,
.entry .entry-content .wp-block-cover-image.alignright,
.entry .entry-content .wp-block-cover.alignleft,
.entry .entry-content .wp-block-cover.alignright {
  width: 100%;
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-cover-image.alignleft,
  .entry .entry-content .wp-block-cover-image.alignright,
  .entry .entry-content .wp-block-cover.alignleft,
  .entry .entry-content .wp-block-cover.alignright {
    padding: 1rem calc(2 * 1rem);
  }
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-cover-image.alignfull,
  .entry .entry-content .wp-block-cover.alignfull {
    padding-left: calc(10% + 58px + (2 * 1rem));
    padding-right: calc(10% + 58px + (2 * 1rem));
  }

  .entry .entry-content .wp-block-cover-image.alignfull .wp-block-cover-image-text,
  .entry .entry-content .wp-block-cover-image.alignfull .wp-block-cover-text,
  .entry .entry-content .wp-block-cover-image.alignfull h2,
  .entry .entry-content .wp-block-cover.alignfull .wp-block-cover-image-text,
  .entry .entry-content .wp-block-cover.alignfull .wp-block-cover-text,
  .entry .entry-content .wp-block-cover.alignfull h2 {
    padding: 0;
  }
}

.entry .entry-content .wp-block-embed-twitter {
  word-break: break-word;
}

.entry .entry-content .wp-block-file {
  font-family: "Roboto Condensed", sans-serif;
}

.entry .entry-content .wp-block-file .wp-block-file__button {
  display: table;
  -webkit-transition: background 150ms ease-in-out;
  transition: background 150ms ease-in-out;
  border: none;
  border-radius: 5px;
  background: #5C6BC0;
  font-size: 22px;
  font-family: "Roboto Condensed", sans-serif;
  line-height: 1.2;
  text-decoration: none;
  font-weight: bold;
  padding: 0.75rem 1rem;
  color: #fff;
  margin-left: 0;
  margin-top: calc(0.75 * 1rem);
}

@media only screen and (min-width: 1168px) {
  .entry .entry-content .wp-block-file .wp-block-file__button {
    font-size: 22px;
    padding: 0.875rem 1.5rem;
  }
}

.entry .entry-content .wp-block-file .wp-block-file__button:hover {
  background: #111;
  cursor: pointer;
}

.entry .entry-content .wp-block-file .wp-block-file__button:focus {
  background: #111;
  outline: thin dotted;
  outline-offset: -4px;
}

.entry .entry-content .wp-block-gallery {
  list-style-type: none;
  padding-left: 0;
}

.entry .entry-content .wp-block-gallery .blocks-gallery-image:last-child,
.entry .entry-content .wp-block-gallery .blocks-gallery-item:last-child {
  margin-bottom: 16px;
}

.entry .entry-content .wp-block-gallery figcaption a {
  color: #fff;
}

.entry .entry-content .wp-block-image {
  max-width: 100%;
}

.entry .entry-content .wp-block-image img {
  display: block;
}

.entry .entry-content .wp-block-image.alignfull img {
  width: 100vw;
  max-width: calc( 100% + (2 * 1rem));
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-image.alignfull img {
    max-width: 100vw;
    margin-left: auto;
    margin-right: auto;
  }
}

.entry .entry-content .wp-block-latest-comments .wp-block-latest-comments__comment-meta {
  font-family: "Roboto Condensed", sans-serif;
  font-weight: bold;
}

.entry .entry-content .wp-block-latest-comments .wp-block-latest-comments__comment-meta .wp-block-latest-comments__comment-date {
  font-weight: normal;
}

.entry .entry-content .wp-block-latest-comments .wp-block-latest-comments__comment,
.entry .entry-content .wp-block-latest-comments .wp-block-latest-comments__comment-date,
.entry .entry-content .wp-block-latest-comments .wp-block-latest-comments__comment-excerpt p {
  font-size: inherit;
}

.entry .entry-content .wp-block-latest-comments.has-dates .wp-block-latest-comments__comment-date {
  font-size: 0.71111111em;
}

.entry .entry-content .wp-block-latest-posts {
  padding: 0;
  list-style: none;
}

.entry .entry-content .wp-block-latest-posts li {
  color: #767676;
  font-family: "Roboto Condensed", sans-serif;
  font-size: calc(22px * 1.125);
  font-weight: bold;
  line-height: 1.2;
  padding-bottom: 0.75rem;
}

.entry .entry-content .wp-block-latest-posts li.menu-item-has-children,
.entry .entry-content .wp-block-latest-posts li:last-child {
  padding-bottom: 0;
}

.entry .entry-content .wp-block-latest-posts li a {
  text-decoration: none;
}

.entry .entry-content .wp-block-latest-posts.is-grid li {
  border-top: 2px solid #ccc;
  padding-top: 1rem;
  margin-bottom: 2rem;
}

.entry .entry-content .wp-block-latest-posts.is-grid li a:after {
  content: '';
}

.entry .entry-content .wp-block-latest-posts.is-grid li:last-child {
  margin-bottom: auto;
}

.entry .entry-content .wp-block-latest-posts.is-grid li:last-child a:after {
  content: '';
}

.entry .entry-content .wp-block-preformatted {
  font-size: 0.71111111em;
  line-height: 1.8;
  padding: 1rem;
}

.entry .entry-content .wp-block-pullquote {
  border-color: transparent;
  border-width: 2px;
  padding: 1rem;
}

.entry .entry-content .wp-block-pullquote blockquote {
  color: #111;
  border: none;
  margin-top: calc(3 * 1rem);
  margin-bottom: calc(3.33 * 1rem);
  margin-right: 0;
  padding-left: 0;
}

.entry .entry-content .wp-block-pullquote p {
  font-size: 1.6875em;
  font-style: italic;
  line-height: 1.3;
  margin-bottom: 0.5em;
  margin-top: 0.5em;
}

.entry .entry-content .wp-block-pullquote p em {
  font-style: normal;
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-pullquote p {
    font-size: 2.25em;
  }
}

.entry .entry-content .wp-block-pullquote cite {
  display: inline-block;
  font-family: "Roboto Condensed", sans-serif;
  line-height: 1.6;
  text-transform: none;
  color: #767676;
  /*
			 * This requires a rem-based font size calculation instead of our normal em-based one,
			 * because the cite tag sometimes gets wrapped in a p tag. This is equivalent to $font-size_xs.
			 */
  font-size: calc(1rem / (1.25 * 1.125));
}

.entry .entry-content .wp-block-pullquote.alignleft,
.entry .entry-content .wp-block-pullquote.alignright {
  width: 100%;
  padding: 0;
}

.entry .entry-content .wp-block-pullquote.alignleft blockquote,
.entry .entry-content .wp-block-pullquote.alignright blockquote {
  margin: 1rem 0;
  padding: 0;
  text-align: left;
  max-width: 100%;
}

.entry .entry-content .wp-block-pullquote.alignleft blockquote p:first-child,
.entry .entry-content .wp-block-pullquote.alignright blockquote p:first-child {
  margin-top: 0;
}

.entry .entry-content .wp-block-pullquote.is-style-solid-color {
  background-color: #5C6BC0;
  padding-left: 0;
  padding-right: 0;
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-pullquote.is-style-solid-color {
    padding-left: 10%;
    padding-right: 10%;
  }
}

.entry .entry-content .wp-block-pullquote.is-style-solid-color p {
  font-size: 1.6875em;
  line-height: 1.3;
  margin-bottom: 0.5em;
  margin-top: 0.5em;
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-pullquote.is-style-solid-color p {
    font-size: 2.25em;
  }
}

.entry .entry-content .wp-block-pullquote.is-style-solid-color a {
  color: #fff;
}

.entry .entry-content .wp-block-pullquote.is-style-solid-color cite {
  color: inherit;
}

.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote {
  max-width: 100%;
  color: #fff;
  padding-left: 0;
  margin-left: 1rem;
  margin-right: 1rem;
}

.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-text-color p,
.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-text-color a,
.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-primary-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-secondary-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-dark-gray-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-light-gray-color,
.entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote.has-white-color {
  color: inherit;
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-pullquote.is-style-solid-color blockquote {
    margin-left: 0;
    margin-right: 0;
  }
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-pullquote.is-style-solid-color.alignright,
  .entry .entry-content .wp-block-pullquote.is-style-solid-color.alignleft {
    padding: 1rem calc(2 * 1rem);
  }
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-pullquote.is-style-solid-color.alignfull {
    padding-left: calc(10% + 58px + (2 * 1rem));
    padding-right: calc(10% + 58px + (2 * 1rem));
  }
}

.entry .entry-content .wp-block-quote:not(.is-large),
.entry .entry-content .wp-block-quote:not(.is-style-large) {
  border-left: 2px solid #5C6BC0;
  padding-top: 0;
  padding-bottom: 0;
}

.entry .entry-content .wp-block-quote p {
  font-size: 1em;
  font-style: normal;
  line-height: 1.8;
}

.entry .entry-content .wp-block-quote cite {
  /*
			 * This requires a rem-based font size calculation instead of our normal em-based one,
			 * because the cite tag sometimes gets wrapped in a p tag. This is equivalent to $font-size_xs.
			 */
  font-size: calc(1rem / (1.25 * 1.125));
}

.entry .entry-content .wp-block-quote.is-large,
.entry .entry-content .wp-block-quote.is-style-large {
  margin: 1rem 0;
  padding: 0;
  border-left: none;
}

.entry .entry-content .wp-block-quote.is-large p,
.entry .entry-content .wp-block-quote.is-style-large p {
  font-size: 1.6875em;
  line-height: 1.4;
  font-style: italic;
}

.entry .entry-content .wp-block-quote.is-large cite,
.entry .entry-content .wp-block-quote.is-large footer,
.entry .entry-content .wp-block-quote.is-style-large cite,
.entry .entry-content .wp-block-quote.is-style-large footer {
  /*
				 * This requires a rem-based font size calculation instead of our normal em-based one,
				 * because the cite tag sometimes gets wrapped in a p tag. This is equivalent to $font-size_xs.
				 */
  font-size: calc(1rem / (1.25 * 1.125));
}

@media only screen and (min-width: 768px) {
  .entry .entry-content .wp-block-quote.is-large,
  .entry .entry-content .wp-block-quote.is-style-large {
    margin: 1rem 0;
    padding: 1rem 0;
  }

  .entry .entry-content .wp-block-quote.is-large p,
  .entry .entry-content .wp-block-quote.is-style-large p {
    font-size: 1.6875em;
  }
}

.entry .entry-content .wp-block-separator,
.entry .entry-content hr {
  background-color: #767676;
  border: 0;
  height: 2px;
  margin-bottom: 2rem;
  margin-top: 2rem;
  max-width: 2.25em;
  text-align: left;
  /* Remove duplicate rule-line when a separator
		 * is followed by an H1, or H2 */
}

.entry .entry-content .wp-block-separator.is-style-wide,
.entry .entry-content hr.is-style-wide {
  max-width: 100%;
}

.entry .entry-content .wp-block-separator.is-style-dots,
.entry .entry-content hr.is-style-dots {
  max-width: 100%;
  background-color: inherit;
  border: inherit;
  height: inherit;
  text-align: center;
}

.entry .entry-content .wp-block-separator.is-style-dots:before,
.entry .entry-content hr.is-style-dots:before {
  color: #767676;
  font-size: 1.6875em;
  letter-spacing: 0.88888889em;
  padding-left: 0.88888889em;
}

.entry .entry-content .wp-block-separator + h1:before,
.entry .entry-content .wp-block-separator + h2:before,
.entry .entry-content hr + h1:before,
.entry .entry-content hr + h2:before {
  display: none;
}

.entry .entry-content .wp-block-table th,
.entry .entry-content .wp-block-table td {
  border-color: #767676;
}

.entry .entry-content .wp-block-verse {
  font-family: "Crimson Text", serif;
  font-size: 22px;
  line-height: 1.8;
}

.entry .entry-content .wp-block-video video {
  width: 100%;
}

.wp-block-video video {
  width: 100%;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/